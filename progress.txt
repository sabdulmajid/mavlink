Progress Updates
Day 1: Monday 22nd May 2023
• Completed setup and installation of all dependencies of the project (Python 3.11, pip, MAVLink, mavgenerate.py, pymavlink, mavutil)
• Have the Raspberry Pi 3 software setup and ready to go
• Update the project progress on GitHub for future reference: https://github.com/sabdulmajid/mavlink
• Have learnt how to setup a connection, wait for heartbeats, and send & receive messages using a UDP port
• Have learnt how to use MAVLink to sign messages and verify signatures
• Have added new examples to the ReadME file on GitHub for future reference

Day 2: Tuesday 23rd May 2023
• Have learnt how to use MAVLink to encrypt messages and decrypt messages
• Added new examples to the MAVLink ReadME file on GitHub for future reference
• Added integration guide for MAVLink, Raspberry Pi 3, and Pixhawk 4 on GitHub for future reference
• Installed MAVProxy dependencies on Mac
• Ensured that the Pixhawk 4 is compatible with MAVLink protocol v2.0
• Added useful messages for drone communication development
• Added access to Android app to find vitals of drone
• Added MAVLink components for future drone development
• Added common protocols for UAV development
• Added extra information about features not added to the main MAVLink protocol library (so we can be aware of them and work around them)
• Installed the dronekit-sitl Python library
• Added code snippets which will help complete my two tasks

Day 3: Wednesday 24th May 2023
• Have installed all dependencies that were giving errors last time (MAVProxy, wxPython, and attrdict3) [took most of my morning today :( ]
• Created quick-start manual on GitHub for instructions to setup & start the project
• Researched on how to integrate all this separate tools together to create a working prototype
• Documented my research in the GitHub ReadME page
• Have fully set-up the Raspberry Pi 3, including SSH
• Have downloaded all the required dependencies both on the iMac and the Raspberry Pi 3
• Main task for tommorow is to connect up the dronekit-sitl to the Pixhawk and start writing code for it (in a simulated environment)

Day 4: Thursday 25th May 2023
• Successfully connected the dronekit-sitl to the Pixhawk 4 (in a simulation environment)
• Successfully written code to arm the drone and takeoff
• Had to fully rewire the pip on the RP4 because there was an outdated, deprecated version of it pre-installed
• Communicated with Hussain to resolve any software issues he was facing on the RP4
• Researched about connecting the physical drone to the software on the Raspberry Pi 4
• Looked into adding a different camera module to the drone (found 6 different types)
• Researched potential issues that may arise when connecting the drone to the software on the Raspberry Pi 4
• Discussed QGroundControl and Mission Planner with Hussain

Day 5: Sunday 28th May 2023
• Researched about QGroundControl and how to connect a drone to it
• Have connected drone to MAVProxy from dronekit-sitl
• Have installed VirtualBox and have researched on how to use it
• Installed Ubuntu 22.04 on the iMac, to smoothly use a dual boot to connect to Mission Planner
• Ran into a bunch of issues regarding the installation and the optimized functionality of Ubuntu 22.04
• Have successfully managed to install all dependencies needed for the project
• Used MONO on Linux to install the Mission Planner software

Day 6: Monday 29th May 2023
• Successfully found the issue for the Virtual Machine problem, and uninstalled the VirtualBox software and used VMWare Fusion instead
• Have successfully installed Ubuntu 22.04 on the iMac Virtual Machine
• Have successfully installed Mission Planner on the Ubuntu 22.04 Virtual Machine
• Have successfully connected the simulation to dronekit-sitl
• Have to research how to use the Mission Planner software, and run simulations
• Took the drone out for a manual test flight, to test functionality and to see if it is working properly
• Have successfully connected the drone to the Mission Planner software
• Running into problems trying to run the Mission Planner on the Linux Virtual Machine - such as rendering issues, programming issues, and connection issues
• Might have to migrate to another different system for better simulation control over a drone

Day 7: Tuesday 30th May 2023
• Fixed up the issues I had with the Linux Virtual Machine
• Discovered that pymavlink is incompatible with Python 3.11, 3.10, 3.7 and even 3.6, and would not install on the Linux Virtual Machine
• Had to downgrade each time from 3.11 to 3.10 to 3.7 and finally 3.6 to install pymavlink, before giving up
• Researched into other possible methods of getting a simulation running, hopefully without pymavlink compatibility issues
• Will continue working on this huge setback for the remainder of the week

Day 8: Wednesday 31st May 2023
• Researched into other possible methods of getting a simulation running, hopefully without pymavlink compatibility issues
• Ran into an issue when trying to purge the Python from the Ubuntu Virtual Machine, which caused the whole system to break and crash
• Reinstalled the whole Ubuntu Virtual Machine on the iMac to try again and hopefully get some code running
• Have successfully installed the Ubuntu Virtual Machine on the iMac
• Have successfully reinstalled all the dependencies needed for the project on the Ubuntu VM

Day 9: Thursday 1st June 2023
• Have successfully installed the Mission Planner software on the Ubuntu Virtual Machine
• Further looked into the issue of pymavlink not being compatible with Python 3.11, 3.10, 3.7 and 3.6
• Went out for testing the drone with Hussain & Dr. Tareq
• Will use dronekit-api to connect to the simulated drone (instead of pymavlink)

Day 10: Sunday 4th June 2023
• Have successfully installed the dronekit-api
• Have found an alternative and a possible solution to the problem
• Will test using pymavlink instead of the dronekit library
• Have found an alternative to dronekit-sitl, known as Open Solo 4
• Will test using Open Solo 4 instead of dronekit-sitl (as dronekit-sitl has been declared a 'dead' project back in November 2019)
• Have also found a 'jailbreaked' version of Mission Planner for Mac, which will allow me to connect to the drone using the Mission Planner software (even on the Mac)
• Will test using the jailbreaked version of Mission Planner for Mac, instead of the Linux Virtual Machine
• Found a few other good alternatives for DroneKit-SITL, one being the ArduPilot-SITL, and I will try to use that with MAVSDK to set up the simulation environment

Day 11: Monday 5th June 2023
• Could only really do some research on the project today, as I did not have access to the work iMac
• Researched into the ArduPilot-SITL and MAVSDK, and how to set up the simulation environment
• Researched into the jailbreaked version of Mission Planner for Mac, and how to set up the simulation environment
• Researched into the Open Solo 4 and how to set up the simulation environment, and will probably avoid this option

Day 12: Tuesday 6th June 2023
• Set up the MAVSDK environment for further use
• Researched into MAVSDK's compatibility with PX4 and ArduPilot, and found out that it is mainly tested on PX4 but should be compatible with any MAVLink device
• Wrote some code involving pymavlink to try and connect to the TCP port from the ArduPilot-SITL
• Ran into many issues with setting up a simulated drone environment for testing
• Ran into multiple errors with connection, especially building the ArduPilot-SITL software
• Now need to fix issues with actual running the point_to_point2.py file
• Tomorrow's task is to get ahold of the differences between using UDP and TCP, and try to connect to the UDP port from the SITL

Day 13: Wednesday 7th June 2023
• Researched into the differences between UDP and TCP, and how to connect to the UDP port from the SITL
• Researched into the differences between MAVLink and MAVSDK, and how to connect to the UDP and TCP ports from the SITL
• Researched into why I am unable to simulate a drone's mission, even though I am fully connected to the SITL with a proper running program
• Will overlook the simulation issue, and will try to connect to the actual drone instead to test Python code
• Long day ahead of us tomorrow - let's start it on a good note :)

Day 14: Thursday 8th June 2023
• Wrote code for the drone to takeoff, in hopes of getting the actual drone to work
• Ran into issues with the drone not taking off, and not being able to connect to the drone
• Researched into how to load code onto the drone
• Researched into how to stay connected to the drone when it is flying in the air (since we have no access point outside)
• Installed Mission Planner and QGroundControl on the work i9 Windows PC for testing

Day 15: Sunday 11th June 2023
• Researched into how to load code onto the drone
• Researched into how to stay connected to the drone when it is flying in the air (since we have no access point outside)
• Researched into how to connect to the drone using the Mission Planner software, while in the air
• Wrote down three different types of code for flying the drone, using pyMAVLink, dronekit-api and MAVSDK
• Will test all three different types of code tomorrow, and see which one works best
• Need to connect the Raspberry Pi 4 completely to the PixHawk, then run code after successfully connecting it
• Explored various methods to ensure the security and integrity of the code loaded onto the drone to prevent unauthorized access or tampering
• Investigated different communication protocols and technologies, such as Wi-Fi, cellular networks, or long-range radio, to establish a reliable and stable connection with the drone during flight
• Explored the capabilities and limitations of the Mission Planner software to optimize its usage for real-time monitoring, control, and data collection from the drone
• Researched best practices for ensuring data synchronization and latency reduction between the ground station and the drone during flight operations

Day 16: Monday 12th June 2023
• Tested all three different types of code for flying the drone, using pyMAVLink, dronekit-api and MAVSDK
• Ran into issues with the drone not taking off, and not being able to connect to the drone
• Could not find a fix to that issue, so will have to work on it again tomorrow
• Have successfully connected the MAVProxy to the drone, but am unable to run either of the 3 code files on it
• Need to configure the Raspberry Pi 4 to run from boot and connect to the drone automatically (with code automatically running as it starts)
• Another issue that I ran into was that the GPS signal did not reach the indoors, so for testing, we had to take the drone outside - which resulted in another issue - the Raspberry Pi 4 was unable to connect to the Wi-fi inside the building
• Will have to find a solution to this issue, as we need to be able to connect to the drone from inside the building, and not have to take it outside every time we want to test something
• Plan tomorrow is to try and do whatever it takes to get the drone to start it's motors inside the building

Day 17: Tuesday 13th June 2023
• 
• 
• 
• 
• 
• 